import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.bmuschko:gradle-docker-plugin:3.5.0"
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    id "com.google.cloud.tools.jib" version "1.1.2"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-spring-boot-application'

group = 'com.kish.boot.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    jcenter()
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def dir = "${project.buildDir}"

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/docker/Dockerfile')
    from 'openjdk:8-jre-alpine'
    maintainer 'Thej Kishore "kishores1984@gmail.com"'
    runCommand 'mkdir app'
    copyFile "libs", "/app/"
    entryPoint 'java'
    defaultCommand '-jar', '/app/cloud-config-client-0.0.1-SNAPSHOT.jar'
    exposePort 8080
    runCommand 'apk --update --no-cache add curl'
    instruction 'HEALTHCHECK CMD curl -f http://localhost:8080/health || exit 1'
}


task buildDockerImage(type: DockerBuildImage) {
    dependsOn assemble, createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    pull = false
    tag = "cloud-config:latest"
}






docker {
    springBootApplication {
        baseImage = 'openjdk:8-alpine'
        ports = [9090, 8090]
        tag = 'cloud-config-client:1.0'

//        jvmArgs = ['-Dspring.profiles.active=local', '-Xmx2048m']
    }
}


